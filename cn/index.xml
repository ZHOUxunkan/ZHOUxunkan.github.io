<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cns on zhouer&#39;s blog</title>
    <link>/cn/</link>
    <description>Recent content in Cns on zhouer&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 25 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="/cn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>「カルテット」臺詞-第四集</title>
      <link>/cn/2022/05/25/%E3%82%AB%E3%83%AB%E3%83%86%E3%83%83%E3%83%88%E8%87%BA%E8%A9%9E-%E7%AC%AC%E5%9B%9B%E9%9B%86/</link>
      <pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/cn/2022/05/25/%E3%82%AB%E3%83%AB%E3%83%86%E3%83%83%E3%83%88%E8%87%BA%E8%A9%9E-%E7%AC%AC%E5%9B%9B%E9%9B%86/</guid>
      <description>ｂこれをご覧ください。
ｍいつの間に&amp;hellip;
ｓ知らなかったです。
ｒ何でこんなことに？
ｂ誰も　朝ゴミを　出しに行かないからです。
ｍ別府さんが出すと思ってたから。
ｒ別府君が出すと思ってたから。
ｓ誰かがやると思って。
ｂ先日　思ったんです、僕が全部やっちゃうから、みんなやらないのかなあ。僕がやらなかったら、みんなにやるのかも？　そう思って放っておいた、結果が　これです。
ｍ寒くないですか？
ｓ寒いですね。
ｂすずめちゃん。
ｓはい。
ｂ朝起きてゴミ出ししてください。
ｓ朝起きれません、夜だったら。
ｂ夜間のゴミ出しは　町内会で禁止されてるんです。
ｓバレなきゃいいんじゃ&amp;hellip;
ｂ見回りがあるんです。
ｓゴミ袋（ふくろ）をステルス迷彩（めいさい）とかに　すればいいんじゃないですか？
ｒそれだ。
ｓ見回りの人　気付かず’通り過ぎますよ。
ｂ通り過ぎるでしょうね、ゴミ回収車も。見つけてもらえない　かくれんぼの　悲しみ（かなしみ）を味わうことになりますよ。
ｒすずめちゃんに　朝起きろは無理だよ。
ｂ家森さん。
ｒお小遣い（こづかい）くれる？
ｂ何で家森さんに　お小遣い　あげなきゃいけないんですか？
ｒバイト　クビになっちゃって　厳しいんだよね。
ｂ巻さん。
ｍ朝は寒くて。
ｂ僕も寒いです、だから4人で　順番こにしましょうって。
ｍ季節で分けましょうか？　春。
ｓ夏。
ｒ秋。
ｂごみを捨てない人間は　ゴミから見てもゴミです、明日こそ出してください！
ｓはい。
 ｂどうするんですか？
ｂこのままだと、この家　ゴミ屋敷になりますよ。マスコミ来ますよ。
ｓ別府さんでも　怒ることあるんですね。
ｍいっそ　どこまで怒るか　試し（ためし）てみましょうか。
ｓ別府さん～
ｂ捨てるのが嫌なら、この子達と生活してください。
ｒこの子達&amp;hellip;
ｍどうしちゃったんですか？
ｂどうしちゃったんですか！？　どうしちゃったんですか！？　どうかしちゃったのかも　しれません　僕。</description>
    </item>
    
    <item>
      <title>日本語文法</title>
      <link>/cn/2022/05/25/%E6%97%A5%E6%9C%AC%E8%AA%9E%E6%96%87%E6%B3%95/</link>
      <pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/cn/2022/05/25/%E6%97%A5%E6%9C%AC%E8%AA%9E%E6%96%87%E6%B3%95/</guid>
      <description>時間 ～とき「when~」 普通形　＋　とき　（例外：ナAだ→ナAな／Ｎだ→Ｎの　＋　とき）
 Ｖ1たとき、V2た・V2る Ｖ1るとき、V2た・V2る  「～」是動詞（Ｖ1）時，以「Ｖ1る」還是「Ｖ1た」等形式出現與全文時態（V2）沒有關係。如果Ｖ1發生在V2之前，使用「Ｖ1たとき」。Ｖ1發生在V2之後或者同時發生，即使文章時態是過去時態，也使用「Ｖ1るとき」。
 私は散歩するとき、この白い靴を履きます。
 Ｖながら「while doing (verb)」 Ｖます　＋　ながら
 表示同時進行兩個行為。也可以用於表示長時間行為。 「Ｖながら」句型的重點在後半句子。 「Ｖながら」的Ｖ一般不使用瞬間動詞。   父はよく音楽を聞きながら絵を描きます。
 ～前に「before~」 Ｖる／Ｎの　＋　前に
「～前に…」表示「～」和「&amp;hellip;」哪個行為、狀態的先後。「&amp;hellip;」的行為在先。
 私はいつも寝る前にあたたかいミルクをに飲みます。
 ～後で・～後「after~」 Ｖる／Ｎの　＋　後で・後
 「～後で・～後&amp;hellip;」表示「～」和「&amp;hellip;」哪個行為、狀態的先後。「&amp;hellip;」的行為、狀態在後。 「～後で&amp;hellip;」的「&amp;hellip;」部分表示動作，「～後&amp;hellip;」的「&amp;hellip;」部分表示持續行為或狀態。   明日、映画を見た後で食事をしませんか。
 Ｖてから（1）「after doing (verb)」  和「～後で」用法相似，更強調「Ｖてから」的部分在先或者一定需要進行。 「Ｖてから（1）」後不接表示狀態的句子。 不用在前後關係明確的句子中。 與「Ｖて」不同，「Ｖてから」在一個句子中只能使用一次。   電気製品を買うときは、値段や使い方をよく調べてから買いましょう。
 Ｖてから（2）「since doing (verb)」  表示某個變化或者持續行為的開始。 「Ｖてから（2）」後續表示變化、持續行為、狀態等的句子。   私は日本に来てから、ずっとこの寮に住んでいます。</description>
    </item>
    
    <item>
      <title>「カルテット」臺詞-第三集</title>
      <link>/cn/2022/05/18/%E3%82%AB%E3%83%AB%E3%83%86%E3%83%83%E3%83%88%E8%87%BA%E8%A9%9E-%E7%AC%AC%E4%B8%89%E9%9B%86/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/cn/2022/05/18/%E3%82%AB%E3%83%AB%E3%83%86%E3%83%83%E3%83%88%E8%87%BA%E8%A9%9E-%E7%AC%AC%E4%B8%89%E9%9B%86/</guid>
      <description>第三集~ 綿来 欧太郎（わたらい おうたろう）：あいつ　いつ来んのかな？
岩瀬 寛子（いわせ ひろこ）：そうね～
岩瀬 純（いわせ じゅん）：おじさん　娘に会いたいの？
綿来 欧太郎：そりゃあ　会いたいよ。
 岩瀬 寛子：最後に娘と　一目　会いたいんだろうけど，もう20年以上　音信不通だしね。
岩瀬 純：その子　Facebookやってないかな？　何て名前？
岩瀬 寛子：すずめちゃん？
岩瀬 純：すずめちゃん。
岩瀬 寛子：色々な親戚（しんせき）に　預け（あずけ）られてた子なの，ママのうちにいたこと　あったんだけど。ある時　物置で　おじいちゃんのチェロ　見つけて，それ以来　一日中　部屋にこもって弾いてた。
岩瀬 純：何で親と暮らしてなかったの？
岩瀬 寛子：母親は　ずいぶん前に　亡くなってたし，父親　おじさんは　ある時　日本中が大騒ぎ（おおさわぎ）に　あるほどの詐欺事件起こしてさ，逮捕されちゃったの。
岩瀬 純：逮捕？　詐欺って？
岩瀬 寛子：ニセ超能力。娘のすずめちゃんに　インチキな超能力教え込んでさ，しょっちゅうテレビに出すたの。
岩瀬 純：これ？
岩瀬 寛子：これこれ。魔法少女ブームみたいになって　結構人気あったんだよね。
 司会者：さあ　それでは皆さん　準備はよろしいでしょうか？　すずめちゃんの奇跡の超能力を　ご覧いただきましょう。
司会者：すずめちゃん　いきますよ。このトランプの数字は　何かな？
世吹 すずめ：スペードの9。</description>
    </item>
    
    <item>
      <title>「カルテット」臺詞-第二集</title>
      <link>/cn/2022/05/11/%E3%82%AB%E3%83%AB%E3%83%86%E3%83%83%E3%83%88%E8%87%BA%E8%A9%9E-%E7%AC%AC%E4%BA%8C%E9%9B%86/</link>
      <pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/cn/2022/05/11/%E3%82%AB%E3%83%AB%E3%83%86%E3%83%83%E3%83%88%E8%87%BA%E8%A9%9E-%E7%AC%AC%E4%BA%8C%E9%9B%86/</guid>
      <description>第二集~ 世吹 すずめ：旧軽に　餃子専門店できてたんですよ。
別府 司：巻さん　餃子　好きなんですか？
巻 真紀：昼から食べる餃子とビールは　人類の到達点です。
家森 諭高：あの　僕がせっかくブイヤベース作ったんで，餃子の話しながら食べるのやめません？
巻 真紀：ごめんなさい，ブイヤベース　おいしいです。
別府 司：最高です。
世吹 すずめ：何味が好きですか？　シソとか？
巻 真紀：シソとか　本当うまいですよね。
家森 諭高：シソとか入れたら&amp;hellip;
世吹 すずめ：あと　棒&amp;hellip;
巻 真紀：棒餃子でしょう。
別府 司：おいしですよね　棒餃子。
家森 諭高：すいません　そうやって話されると，餃子　食べてる気がしてくるんですよね。
巻 真紀と世吹 すずめと別府 司：はい&amp;hellip;
巻 真紀：ブイヤベース。
世吹 すずめ：ブイヤベース。
家森 諭高：言い聞かせなくていいから。
巻 真紀：餃子は&amp;hellip;　嫌い。
世吹 すずめ：餃子は嫌い。
家森 諭高：嫌いになろうと思えば思うほど　好きなんるでしょ？
巻 真紀：これに　餃子入れたら&amp;hellip;
世吹 すずめ：これに　餃子入れたら&amp;hellip;
世吹 すずめ：おいしい
 巻 鏡子：楽しそうですね。
世吹 すずめ：私は　別に　合わせて笑ってるだけなんで。</description>
    </item>
    
    <item>
      <title>《深入理解 Java 虛擬機》學習筆記</title>
      <link>/cn/2022/04/29/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3-java-%E8%99%9B%E6%93%AC%E6%A9%9F%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</link>
      <pubDate>Fri, 29 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/cn/2022/04/29/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3-java-%E8%99%9B%E6%93%AC%E6%A9%9F%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</guid>
      <description>走近 Java 自動內存管理 Java 內存區域與內存溢出異常 運行時數據區域 程序計數區 Program Counter Register，可以看做是當前線程所執行的字節碼的行號指示器。字節碼解釋器工作時就是通過改變這個計數器的值來選取下一條需要執行的字節碼指令，它是程序控製流的指示器，分支、循環、跳轉、異常處理、線程恢復等基礎功能都需要依賴這個計數器來完成。
由於Java虛擬機的多線程是通過線程輪流切換、分配處理器執行時間的方式來實現的，在任何一個確定的時刻，一個處理器（對於多核處理器來說是一個內核）都只會執行一條線程中的指令。因此，為了線程切換後能恢復到正確的執行位置，每條線程都需要有一個獨立的程序計數器，各條線程之間計數器互不影響，獨立存儲，我們稱這類內存區域為「線程私有」的內存。
當實現 Native 方法時，這個計數器值為Undefined.
Java 虛擬機棧 Java Virtual Machine Stack，線程私有的，生命週期與線程相同。每個方法被執行時，虛擬機就同步創建一個棧幀用於存儲局部變量表、操作數棧、動態連接、方法出口等信息。每一個方法被調用直至執行完畢的過程，就對應著一個棧幀在虛擬機棧中從入棧到出棧的過程。
局部變量表存放了編譯器可知的各種 Java 虛擬機基本數據類型、對象引用和 returnAddress 類型（指向了一條字節碼指令的地址）。局部變量表以 Slot 的基本單元儲存數據，局部變量表所需的內存空間在編譯期間完成分配在方法運行期間不會改變局部變量表的大小（指 Slot 的數量）。
本地方法棧 Native Method Stack，為調用本地方法服務。
Java 堆 Java Heap，”幾乎“所有的對象實例都在這裡分配內存。所有線程共享的 Java 堆中可以劃分出多個線程私有的分配緩衝區（Thread Local Allocation Buffer, TLAB)，以提升對象分配時的效率。
方法區 Method Area，用於存儲已被虛擬機加載的類型信息、常量、靜態變量、及時編譯器編譯後的代碼緩存等數據。作為一個概念，在 HotSpot 中以永久代/元空間實現。
運行時常量池 Runtime Constant Pool，屬於方法區的一部分。Class 文件中用於存放編譯期生成的各種字面量與符號引用的常量池表在類加載後放到方法區的運行時常量池中。
直接內存 Direct Memory，在 NIO 的引入後虛擬機可以使用 Native 函數庫直接分配堆外內存，然後通過通過一個 DirectByteBuffer 對象作為這塊內存的引用進行操作。
對象 對象的創建  虛擬機遇到 new 指令； 檢查這一指令的藏書是否能在常量池中定位的到一個類的符號引用，並檢查這個類是否被加載、解析和初始化。沒有的話就進行類加載。 為新對象在堆中分配內存；（多線程情況下，採用 CAS 或 TLAB） 將分配到的內存空間（不包括對象頭）都初始化為零值； 對對象進行必要的設置，信息存儲在對象頭裡。  此時Class 文件中的 &amp;lt;init&amp;gt; 方法尚未執行，所有字段都為零值。</description>
    </item>
    
    <item>
      <title>「カルテット」臺詞-第一集</title>
      <link>/cn/2022/04/27/%E3%82%AB%E3%83%AB%E3%83%86%E3%83%83%E3%83%88%E8%87%BA%E8%A9%9E-%E7%AC%AC%E4%B8%80%E9%9B%86/</link>
      <pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/cn/2022/04/27/%E3%82%AB%E3%83%AB%E3%83%86%E3%83%83%E3%83%88%E8%87%BA%E8%A9%9E-%E7%AC%AC%E4%B8%80%E9%9B%86/</guid>
      <description>從第一集開始學習吧~ 世吹 すずめ（せぶき すずめ）：&amp;hellip;　2　3　4　5　6　7　75　100　200　270&amp;hellip;
巻 鏡子（まき きょうこ）：すずめさんですよね？　あなたに　お願いしたい　お仕事があるんです。
世吹 すずめ：演奏だったら　どこでも。
巻 鏡子：いや　あの&amp;hellip;　この女性と　友達になる仕事です。
 別府 司（べっぷ つかさ）：どうも。
巻 真紀（まき まき）：どうも。
別府 司：バイオリン　大丈夫ですか？
巻 真紀：はい。
別府 司：冬の軽井沢（かるいざわ）もいいですよ，10時になると　どこも　シャッター下ろしちゃいますけど，別荘は　旧軽井沢の奥にあります，祖父の持ち物なので　いくら　音（おと）を出しても問題ありません。
別府 司：すいません，1人で喋って（しゃべって）て。
巻 真紀：昨夜緊張して　なかなか眠れ（ねむれ）なくて，動画みちゃたら　余計（よけい）眠れなくなって。
別府 司：動画？　巻 真紀：カモの赤ちゃんが排水溝に　次々と落ちてって。
別府 司：マジですが&amp;hellip;　家森さんも　すずめちゃんも　巻さんが来るのを　楽しみにしています，僕は　運命だと思ってるです，ほら　僕達　東京のカラオケボックスで　偶然出会いって&amp;hellip;　しかも　その4人が　4人とも奏者で，バイオリン　バイオリン　ビオラ　チェロ，弦楽四重奏　組むしかないですよね，僕たち　絶対最高の　カルテットになります。　巻 真紀：絶対何で&amp;hellip;</description>
    </item>
    
    <item>
      <title>《圖解設計模式》學習筆記</title>
      <link>/cn/2022/04/26/%E5%9C%96%E8%A7%A3%E8%A8%AD%E8%A8%88%E6%A8%A1%E5%BC%8F%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</link>
      <pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/cn/2022/04/26/%E5%9C%96%E8%A7%A3%E8%A8%AD%E8%A8%88%E6%A8%A1%E5%BC%8F%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</guid>
      <description>相關代碼。
Iterator 模式 用於在數據集合中按照順序遍歷集合。
 next() 返回當前元素，並指向下一個元素； hasNext() 確認接下來是否可以調用 next 方法。  Adapter 模式  target 負責定義所需要的方法； client 負責使用 target 所定義的方法，即具體的業務實現； adaptee 被適配的一方，即提供方法具體實現的一方； adapter 使用 adaptee 已有的功能滿足 target 的需求，適配器本體。  類適配器模式：使用繼承類和繼承要求實現方法的接口，重寫接口方法時調用父類方法實現包裝。
對象適配器模式：利用被包裝類的具體實現的方法調用實現包裝，即在適配器中創建一個被包裝類的實例。
Template Method 模式 在父類中定義處理流程的框架，在子類中實現具體處理
 AbstractClass 負責聲明在模板方法中所使用到的抽象方法和實現模板方法； ConcreteClass 負責實現 AbstractClass 定義的抽象方法。  Factory Method 模式  Product 屬於框架的一部分，是一個抽象類，定義了工廠生產出的實例所持有的接口，具體的實現由子類決定； Creator 屬於框架的一部分，是負責生產產品的抽象類，不使用 new 關鍵字來生產實例，而是調用生產實例的專門方法（即在 create 方法中對 createProduct 抽象方法的調用），這樣可以防止父類與其他具體類的實現。 ConcreteProduct Product 的具體實現； ConcreteCreator Creator 的具體實現。  Singleton 模式 單例。
Prototype 模式 根據實例來生成新實例。</description>
    </item>
    
  </channel>
</rss>
